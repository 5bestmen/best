#ifndef DEFINE_H_
#define DEFINE_H_

/////////////////////////////////////////////////////

//左边树结构 
//FTU
#define TREE_FTU_ITEM                                 30
//遥信
#define TREE_REMOTE_SIGNALITEM                        301
//遥信定值
#define TREE_REMOTE_SIGNALFIX_ITEM                    3011
//遥信测点
#define TREE_REMOTE_SINGALPOIN_TITEM                  3012
//遥信实时数据
#define TREE_REMOTE_CURRENTDATA_ITEM                  3013
//遥信实时普通数据
#define TREE_REOMTE_CURRETNDATA_GENERALITEM           30131
//双位置普通遥信数据
#define TREE_REMOTE_CURRENTDATA_DOUBLEPOSITION_ITEM   30132

//遥测
#define TREE_REMOTE_MEASUREITEM                       302

//遥控
#define TREE_REMOTE_CONTROLITEM                       303




//#define TAGNAME Qt::EditRole
#define LASTVALUE Qt::UserRole + 10086 + 1
//装置指针
#define POINTERDATA Qt::UserRole + 10086 + 2
#define GROUP_NUMBER_ROLE	Qt::UserRole + 10086 + 3
#define ROOT_GROUP 0	//前置 通道 根节点
#define MAX_GROUP_NUM 3
#define TREE_TOOL_TIP_ROLE	Qt::ToolTipRole

//	tagnname修改类型 virtual bool ChangeTagNameNodify(QString &tagName, QString &lastTagName, int nType)
enum Module_ID
{
	FES, DEVICE_AI, DEVICE_DI, DEVICE_AO, DEVICE_DO,
	GRAPH,
	REPORT,
	//左边树结构ID
	LEFTTREE,
	NODE_MODULE_SERVER, NODE_MODULE_FES, NODE_MODULE_WORKSTATION
};


#define LEVEL_1 1

#define VERSION "1.0"

enum COLUMNTYPE{
	LINESTRING = 2, DEVICEADDRESS, IPADDRESS, DOUBLETYPE, TAGNAMELINE
};

//小数个数
enum DOUBLE_TYPE_POINT_COUNT
{
	ONT_COUNT = 1, TWO_COUNT, THREE_COUNT, FOUR_COUNT, SIX_COUNT
};

enum WIDGET_TYPE
{
	DEVICE_AI_WIDGET_TYPE,DEVICE_DI_WIDGET_TYPE,DEVICE_AO_WIDGET_TYPE, DEVICE_DO_WIDGET_TYPE, SCALE_WIDGET_TYPE, DEVICE_WIDGET_TYPE, CHANNEL_WIDGET_TYPE
	, FES_ANALOG_ALARM_TYPE, FES_ANALOG_ALARM_LIMIT_TYPE, FES_DIGITAL_ALARM_TYPE, FES_DIGITAL_ALARM_LIMIT_TYPE, FES_WIDGET_TYPE, VARIABLE_SYSTEM_WIDGET_TYPE, VARIABLE_USER_GROUP_WIDGET_TYPE,
	NODE_SERVER_TYPE, NODE_FES_GROUP_TYPE, NODE_FES_TYPE, NODE_WORKSTATION_TYPE, NODE_WORKSTATION_GROUP_TYPE,
	/*scada system virable type*/SCADA_WIDGET_TYPE ,SCADA_VARIABLE_SYSTEM_TYPE, SCADA_VARIABLE_USER_GROUP_TYPE, SCADA_ANALOG_ALARM_TYPE, SCADA_ANALOG_ALARM_LIMIT_TYPE, SCADA_DIGITAL_ALARM_TYPE
	, SCADA_DIGITAL_ALARM_LIMIT_TYPE, SCADA_SCALE_LINEAR_TYPE, SCADA_SCALE_NONLINEAR_TYPE, FORWARDING_CHANNEL_WIDGET_TYPE, FORWARDING_CHANNEL_AI_WIDGET_TYPE,
	FORWARDING_CHANNEL_DI_WIDGET_TYPE, FORWARDING_CHANNEL_AO_WIDGET_TYPE, FORWARDING_CHANNEL_CG_WIDGET_TYPE, FORWARDING_CHANNEL_DO_WIDGET_TYPE, FORWARDING_CHANNEL_KWH_WIDGET_TYPE
};

#define LENGTH_CHARS(x, y) x > y ? y : x

#endif
